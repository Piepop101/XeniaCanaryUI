<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAF5eXgBgYGANWVlZYFlZWV1jY2MKYWFhAGBgYABiYmIKWVlZXVlZ
        WWFgYGANXl5eAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIuLiwCBgYEAAAAAAFxcXC5XV1faWVlZll5eXjldXV06X19fOl5e
        XjlZWVmWV1dX2lxcXC4JCQkAgICAAIqKigAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxcXEA////AFpaWlVXV1eoXFxcSmBgYCxbW1thV1dXw1pa
        WltbW1tcV1dXw1tbW19gYGAsXFxcSldXV6laWlpV////AHJycgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABvb28AgoKCAGNjYwxpaWkMWVlZhldXV7RdXV1IWFhYi1dX
        V79bW1toWVlZjFlZWYtbW1tpV1dXwFlZWYldXV1HV1dXtFlZWYZpaWkMY2NjDH9/fwBvb28AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpaWgBcXFwrV1dXv1lZWZ1lZWUcXFxcS1dX
        V7dYWFieXFxcYVdXV75VVVX9VVVV/VdXV7xcXFxgWFhYn1dXV7dcXFxKZWVlHFlZWZ1XV1e/XFxcK1pa
        WgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkpKSAFVVVQBfX18QXFxcJ11dXTRYWFigXFxcV1lZ
        WXpXV1fFWlpadVpaWntWVlblVVVV/1VVVf9VVVX/VVVV/1ZWVuRaWlp6WlpadldXV8VZWVl4XFxcV1hY
        WJ9cXFw0XFxcJ19fXxBVVVUAkpKSAAAAAAAAAAAAAAAAAAAAAABmZmYAampqBlhYWJxXV1ffXFxcSl5e
        XjBYWFipWFhYr1xbW19YVlaqVVVV+VVVVf9VVVX/VVVV/1VVVf9VVVX/VVVV/1VVVflYVlaoXFtbYFhY
        WK9YWFioX19fLlxcXEpXV1ffWFhYnGpqagZmZmYAAAAAAAAAAABeXl4AYGBgC1paWkdcXFw5W1tbWltb
        W2BaWlppV1dXxVlZWYVbWlpsV1pb1lZiZv9VVlb/VVVV/1VVVf9VVVX/VVVV/1VVVf9VVFT/VVdX/1Zj
        Z/9XW1zVW1pabFlZWYZXV1fFWlpaZ1tbW19aWlpaXFxcOVpaWkdgYGALXl5eAFdXVwBbW1tEV1dX6llZ
        WZFhYWEmWFhYlFhYWLxbW1tkWFhYlVZVVfNVW13/Wp2y/1mOn/9VWFj/VVRU/1VVVf9VVVX/VVRU/1Va
        XP9alqn/W6W9/1ZeYP9WVVXyWFhYlFxcXGVYWFi8WFhYk2FhYSVZWVmSV1dX6ltbW0RYWFgAXV1dAF1d
        XRBcXFxJW1tbWVdXV75ZWVmXXFxcY1dXV8VVVVX+VVVV/1VUVP9WZ2z/XLXQ/1qds/9WXV//VVRT/1VT
        U/9WYmX/W6e//1293P9XbHP/VVRU/1VVVf9VVVX+V1dXxFxcXGNZWVmYV1dXvVtbW1hcXFxJXV1dEF1d
        XQAAAAAAWFhYAFlZWTZYWFi+W1tbb1paWoNWVlbpVVVV/1VVVf9VVVX/VVVV/1VTU/9XbHL/Xb3c/1yu
        yP9WZ2z/V292/1251/9dxeb/V3J7/1VTU/9VVVX/VVVV/1VVVf9VVVX/VlZW6VpaWoFaWlpwWFhYvlpa
        WjRZWVkAAAAAAAAAAABdXV0AX19fHlxcXF5XV1eyVVVV+1VVVf9VVVX/VVVV/1VVVf9VVVX/VVVV/1VU
        U/9XbnX/Xb/e/13A4P9bqcH/XbrY/1d2f/9VVFP/VVVV/1VVVf9VVVX/VVVV/1VVVf9VVVX/VVVV+1dX
        V7FcXFxdX19fHl5eXgAAAAAAAAAAAGJiYgBlZWURWFhYrlVVVf9VVVX/VVVV/1VVVf9VVVX/VVVV/1VV
        Vf9VVFT/VVRT/1Zpb/9anLD/XcTk/17R9f9an7X/Vl9i/1VTU/9VVVX/VVVV/1VVVf9VVVX/VVVV/1VV
        Vf9VVVX/VVVV/1hYWKxlZWUQYmJiAAAAAAAAAAAAaGhoAP///wBdXV0lWFhYoFVVVfdVVVX/VVVV/1VV
        Vf9VVVX/VVNT/1VdX/9Zi5r/XcXm/1/V+f9ao7n/XLbS/1/Y/v9cuNX/WHqE/1VXV/9VVFP/VVVV/1VV
        Vf9VVVX/VVVV/1VVVfdYWFifXV1dJAAAAABmZmYAAAAAAAAAAAAAAAAAAAAAAF5eXgBjY2MKWlpaZ1ZW
        VuBVVVX/VVVV/1VaXP9YfYn/XLfU/1/Y/f9f2///XbjV/1dtc/9WYmb/W6jB/1/Y/P9f0/f/W6a+/1du
        dv9VV1f/VVVV/1VVVf9WVlbgWlpaZWNjYwlfX18AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGlp
        aQCbm5sAXFxcNFdXV7ZWWlv8WISR/1ytxv9ctdH/XLTQ/1ugtv9WZGj/VVRT/1VUVP9VW13/WZGi/1y0
        0P9ctND/W6S7/1dyev9VVVX8V1dXtVtbWzO1tbUAa2trAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALCwsABWVlYAYF9fEllaW35WW1zsVVla/1VYWf9VWFn/VVZW/1VUVP9VVVX/VVVV/1VV
        VP9VVVT/VVhZ/1VYWf9VWVr/Vlpb61hZWX1fX18RW1tbAHNzcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiYF8AaWZlA1taWkdXVlbKVVVV/lVVVf9VVVX/VVVV/1VV
        Vf9VVVX/VVVV/1VVVf9VVVX/VVVV/ldWVslbWlpGbWxsA2RkZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2dnYAT09PAF5eXh1YWFiWVlZW9VVV
        Vf9VVVX/VVVV/1VVVf9VVVX/VVVV/1ZWVvRYWFiVXl5eHU9PTwB6enoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAX19fAGVl
        ZQdaWlpdVlZW2lVVVf9VVVX/VVVV/1VVVf9WVlbZWlpaW2ZmZgdfX18AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAaGhoAAAAAABcXFwtV1dXrVVVVftVVVX6V1dXrF1dXSsAAAAAampqAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAf39/AFtbWwBgYGAPWVlZcVlZWXBhYWEOXFxcAISEhAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH5+fgCAgIABgoKCAX9/fwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////4Yf//+AH//+AAf/+AAB//AAAP/AA
        AA/gAAAHgAAAAYAAAAGAAAABwAAAA8AAAAPAAAAD4AAAB/AAAA/8AAA//gAAf/8AAP//wAP//+AH///4
        H////D////5///////////////////////8=
</value>
  </data>
</root>